{"version":3,"sources":["webpack:///src/views/folder/FolderManage.vue","webpack:///./src/views/folder/FolderManage.vue?2cc7","webpack:///./src/views/folder/FolderManage.vue"],"names":["_this","this","errMsg","tree","length","id","expandNodeKeysArr","_this2","deviceModel","keyword","resources","_this3","users","_this4","then","successCnt","_this5","initTree","_this6","getBundles","_this7","name","toLdap","_this8","_this9","bundleId","getUsers","_this10","key","_this11","bundleNodes","multipleSelection","userArr","val","d","_this12","nodeId","newTargetId","username","dropType","nodeType","folderIndex","parentId","getRootoptions","_this13","_iteratorNormalCompletion","rootOption","_step","value","option","_this14","setRootId","folder_FolderManage","render","_vm","_h","$createElement","_c","_self","staticStyle","float","width","model","callback","$$v","activeTabName","expression","attrs","label","_v","margin-top","font-size","min-height","body-style","staticClass","slot","type","size","disabled","disableAddFolderBtn","on","click","showAddFolderDialog","disableModifyFolderBtn","showModifyFolderDialog","disableDeleteFolderBtn","deleteFolder","disableResetRootBtn","resetRoot","margin-left","nativeOn","$event","syncFolderToLdap","downLoadFolderFromLdap","cleanUpLdap","ref","data","node-key","highlight-current","expand-on-click-node","props","defaultProps","default-expanded-keys","defaultExpandKeys","draggable","allow-drop","allowDrop","allow-drag","allowDrag","node-click","handleNodeClick","node-drag-end","handleNodeDragEnd","node-expand","handleNodeExpand","node-collapse","handleNodeCollapse","placeholder","filters","$set","margin-right","disableSetFolderBtn","setFolder","directives","rawName","selection-change","handleSelectionChange","prop","sortable","title","visible","dialogAddForderFormVisible","update:visible","folderForm","label-width","auto-complete","_l","item","addFolder","dialogmodifyForderFormVisible","modifyForm","modifyFolder","dialogsetRootVisible","setRoot","staticRenderFns","Component","__webpack_require__","normalizeComponent","FolderManage","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/17.38137cb997be9bde26a1.js","sourcesContent":["<template>\n\t<section>\n    <el-tabs v-model=\"activeTabName\" style=\"float:left;width:100%;\">\n      <el-tab-pane label=\"分组管理\" name=\"分组管理\"></el-tab-pane>\n    </el-tabs>\n\n    <el-card style=\"float:left;margin-top:10px;width:45%;font-size: 18px; min-height: 800px;\" body-style=\"padding:0px\" >\n      <div slot=\"header\" class=\"clearfix\">\n        <el-button type=\"primary\" size=\"small\" @click=\"showAddFolderDialog\" :disabled=\"disableAddFolderBtn\" style=\"float: left;\">添加目录</el-button>\n        <el-button type=\"primary\" size=\"small\" @click=\"showModifyFolderDialog\" :disabled=\"disableModifyFolderBtn\" style=\"float: left;\">修改</el-button>\n        <!-- <el-button type=\"danger\" size=\"small\" @click=\"upShift\" style=\"float: left;\">测试上移</el-button> -->\n        <el-button type=\"danger\" size=\"small\" @click=\"deleteFolder\" :disabled=\"disableDeleteFolderBtn\" style=\"float: left;\">删除</el-button>\n        <el-button type=\"danger\" size=\"small\" @click=\"resetRoot\" :disabled=\"disableResetRootBtn\" style=\"float: left;\">重置根目录</el-button>\n        <!-- <el-button type=\"primary\" size=\"small\" @click=\"showSetRootDialog\" style=\"float: left;\">设置根目录</el-button> -->\n\n        <!--\n        <el-button type=\"primary\" size=\"small\" @click=\"downLoadFolderFromLdap\"  style=\"float: left;margin-left: 40px;\">从LDAP下载</el-button>\n        <el-button type=\"primary\" size=\"small\" @click=\"syncFolderToLdap\"  style=\"float: left;\">上传到LDAP</el-button>\n        <el-button type=\"primary\" size=\"small\" @click=\"cleanUpLdap\"  style=\"float: left;\">重置LDAP数据</el-button>\n        -->\n        <el-dropdown style=\"float: left;margin-left: 10px;\">\n          <el-button type=\"primary\" size=\"small\">\n              LDAP操作<i class=\"el-icon-arrow-down el-icon--right\"></i>\n          </el-button>\n\n          <el-dropdown-menu slot=\"dropdown\">\n            <el-dropdown-item  v-on:click.native=\"syncFolderToLdap()\">上传到LDAP</el-dropdown-item>\n            <el-dropdown-item  v-on:click.native=\"downLoadFolderFromLdap()\">从LDAP下载</el-dropdown-item>\n            <el-dropdown-item  v-on:click.native=\"cleanUpLdap()\">重置LDAP数据</el-dropdown-item>\n          </el-dropdown-menu>\n        </el-dropdown>\n\n      </div>\n\n      <div class=\"custom-tree-container\">\n        <div>\n\n            <el-tree ref=\"tree\"\n                    :data=\"tree\"\n                    node-key=\"id\"\n                    highlight-current :expand-on-click-node=\"false\"\n                    :props=\"defaultProps\"\n                    :default-expanded-keys=\"defaultExpandKeys\"\n                    @node-click=\"handleNodeClick\"\n                    @node-drag-end=\"handleNodeDragEnd\"\n                    @node-expand=\"handleNodeExpand\"\n                    @node-collapse=\"handleNodeCollapse\"\n                    draggable\n                    :allow-drop=\"allowDrop\"\n                    :allow-drag=\"allowDrag\">\n            </el-tree>\n\n        </div>\n      </div>\n    </el-card>\n\n\n    <el-card style=\"float:left;margin-left:50px;margin-top:10px;width:50%;min-height: 800px;\" body-style=\"padding:0px\">\n\n      <div slot=\"header\" class=\"clearfix\">\n        <!--\n        <el-select v-model=\"filters.deviceModel\" size=\"small\" placeholder=\"选择设备类型\" style=\"float: left;margin-left: 30px;width:200px;\">\n          <el-option v-for=\"item in deviceModelOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n          </el-option>\n        </el-select>\n        -->\n        <el-input v-model=\"filters.keyword\" size=\"small\" style=\"float: left;margin-left: 30px;width:200px;\" placeholder=\"关键字\" ></el-input>\n        <el-button type=\"info\" @click=\"getBundles\" size=\"small\" style=\"float: left;margin-left: 30px;\">查询设备</el-button>\n        <el-button type=\"info\" @click=\"getUsers\" size=\"small\" style=\"float: left;margin-left: 30px;\">查询用户</el-button>\n        <el-button type=\"primary\" @click=\"setFolder\" size=\"small\" :disabled=\"disableSetFolderBtn\" style=\"float: right;margin-right: 50px;\">加入分组</el-button>\n      </div>\n\n      <!--设备列表-->\n      <el-table :data=\"resources\" v-show=\"resourceTableShow\" v-loading=\"resourceTableLoading\" @selection-change=\"handleSelectionChange\" style=\"width: 100%;\">\n        <el-table-column width=\"50\" type=\"selection\"></el-table-column>\n        <el-table-column prop=\"bundleName\" label=\"名称\" width=\"200\" sortable>\n        </el-table-column>\n        <!--<el-table-column prop=\"deviceModel\" label=\"资源类型\" width=\"150\" sortable>-->\n        <!--</el-table-column>-->\n        <el-table-column prop=\"username\" label=\"账号\" width=\"200\"  sortable>\n        </el-table-column>\n        <el-table-column prop=\"bundleId\" label=\"资源ID\" width=\"300\"  sortable>\n        </el-table-column>\n      </el-table>\n\n      <!--用户列表-->\n      <el-table :data=\"users\" v-show=\"userTableShow\" v-loading=\"userTableLoading\" @selection-change=\"handleSelectionChange\" style=\"width: 100%;\">\n        <el-table-column width=\"50\" type=\"selection\"></el-table-column>\n        <el-table-column prop=\"name\" label=\"名称\" width=\"200\" sortable>\n        </el-table-column>\n        <el-table-column prop=\"userNo\" label=\"用户编号\" width=\"200\"  sortable>\n        </el-table-column>\n        <el-table-column prop=\"creater\" label=\"创建者\" width=\"250\"  sortable>\n        </el-table-column>\n\n      </el-table>\n\n    </el-card>\n\n    <!-- 添加分组对话框 -->\n    <el-dialog title=\"添加分组\" :visible.sync=\"dialogAddForderFormVisible\" width=\"30%\">\n      <el-form :model=\"folderForm\" label-width=\"100px\">\n        <el-form-item label=\"分组名称\" >\n          <el-input v-model=\"folderForm.name\" auto-complete=\"off\" style=\"width: 300px;\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"上传LDAP\">\n          <el-select v-model=\"folderForm.toLdap\" placeholder=\"是否上传LDAP\">\n            <el-option v-for=\"item in toLdapoptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogAddForderFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"addFolder\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <!-- 修改分组对话框 -->\n    <el-dialog title=\"修改分组\" :visible.sync=\"dialogmodifyForderFormVisible\" width=\"30%\">\n      <el-form :model=\"modifyForm\" label-width=\"100px\">\n        <el-form-item label=\"分组名称\" >\n          <el-input v-model=\"modifyForm.name\" auto-complete=\"off\" style=\"width: 300px;\"></el-input>\n        </el-form-item>\n\n        <el-form-item label=\"上传LDAP\">\n          <el-select v-model=\"modifyForm.toLdap\" placeholder=\"是否上传LDAP\">\n            <el-option v-for=\"item in toLdapoptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n            </el-option>\n          </el-select>\n        </el-form-item>\n\n      </el-form>\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogmodifyForderFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"modifyFolder\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\n    <!-- 设置根目录对话框 -->\n    <el-dialog title=\"设置根目录\" :visible.sync=\"dialogsetRootVisible\" width=\"30%\">\n      <div style=\"margin-top:10px;\">\n        <el-select v-model=\"setRootId\" placeholder=\"选择根目录\" style=\"float: left;margin-left: 30px;width:200px;\">\n          <el-option v-for=\"item in setRootOptions\" :key=\"item.value\" :label=\"item.label\" :value=\"item.value\">\n          </el-option>\n        </el-select>\n      </div>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogsetRootVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"setRoot\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n\t</section>\n</template>\n\n<script>\n\timport { addFolder,modifyFolder,deleteFolder,setFolderOfBundles,resetFolderOfBundles,initFolderTree,getDeviceModels,\n    queryBundlesWithoutFolder,queryUsersWithoutFolder,setFolderToUsers,resetFolderOfUsers,queryRootOptions,setRoot,syncFolderToLdap,\n    syncFolderFromLdap,cleanupFolderLdap,changeNodePosition,resetRootNode} from '../../api/api';\n\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\tresources: [],\n        users : [],\n        resourceTableShow : true,\n        userTableShow : false,\n        deviceModelOptions : [],\n        filters: {\n          deviceModel : '',\n          keyword: ''\n        },\n        multipleSelection : [],\n        disableSetFolderBtn : true,\n        disableAddFolderBtn : true,\n        disableModifyFolderBtn : true,\n        disableDeleteFolderBtn : true,\n        disableResetRootBtn : false,\n        defaultExpandKeys : [],\n        tree : [],\n        defaultProps : {\n          children: 'children',\n          label: 'name'\n        },\n        currentSelectNode : null,\n        expandNodeKeysArr: [],\n        resourceTableLoading : false,\n        userTableLoading : false,\n        dialogAddForderFormVisible : false,\n        dialogmodifyForderFormVisible : false,\n        folderForm : {},\n        dialogsetRootVisible : false,\n        setRootId : \"\",\n        setRootOptions : [],\n        modifyForm : {},\n        toLdapoptions : [\n          {\n            value : true,\n            label : \"是\"\n          },\n          {\n            value : false,\n            label : \"否\"\n          }\n        ],\n\t\t\t}\n\t\t},\n\t\tmethods: {\n      //获取资源类型\n      // getDeviceModels : function(){\n      //   getDeviceModels().then(res => {\n      //     if(!res.errMsg && res.deviceModels){\n      //       this.deviceModelOptions.push({\n      //         value : \"\",\n      //         label : \"全部类型\"\n      //       });\n      //       for(let deviceModel of res.deviceModels){\n      //         let deviceModelOption = {\n      //           value : deviceModel,\n      //           label : deviceModel\n      //         };\n      //         this.deviceModelOptions.push(deviceModelOption);\n      //       }\n      //     }\n      //   });\n      // },\n      initTree : function(keepExpand){\n        initFolderTree().then(res => {\n          if (res.errMsg) {\n            this.$message({\n              message: res.errMsg,\n              type: 'error'\n            });\n          } else {\n            this.tree = res.tree;\n            // console.log(JSON.stringify(res.tree));\n\n            if (!keepExpand){\n              // console.log('not keepExpand')\n              this.expandNodeKeysArr.splice(0,this.expandNodeKeysArr.length);\n              this.expandNodeKeysArr = this.tree.map(rootNode=>rootNode.id);\n            }\n\n            this.defaultExpandKeys = this.expandNodeKeysArr;\n          }\n        });\n      },\n      //获取资源列表\n      getBundles : function(){\n        this.resourceTableShow = true;\n        this.userTableShow = false;\n        let param = {\n          deviceModel : this.filters.deviceModel,\n          keyword : this.filters.keyword\n        };\n        this.resourceTableLoading = true;\n        queryBundlesWithoutFolder(param).then((res) => {\n          if (res.errMsg) {\n            this.$message({\n              message: res.errMsg,\n              type: 'error'\n            });\n          } else {\n            this.resources = res.resources;\n          }\n\n        \tthis.resourceTableLoading = false;\n        });\n      },\n      //获取未绑定的用户列表\n      getUsers : function(){\n        this.resourceTableShow = false;\n        this.userTableShow = true;\n        let param = {\n          keyword : this.filters.keyword\n        };\n        // queryUsersWithoutFolder\n        this.userTableLoading = true;\n        queryUsersWithoutFolder(param).then((res) => {\n          if (res.errMsg) {\n            this.$message({\n              message: res.errMsg,\n              type: 'error'\n            });\n          } else {\n            this.users = res.users;\n          }\n\n          this.userTableLoading = false;\n        });\n\n      },\n      syncFolderToLdap : function(){\n        this.$confirm('是否确认上传LDAP?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.resourceTableLoading = true;\n          let param = {};\n          syncFolderToLdap(param).then(res => {\n            this.resourceTableLoading = false;\n            if(res.errMsg){\n              this.$message({\n                message: res.errMsg,\n                type: 'error'\n              });\n            } else {\n              this.$message({\n                message: \"同步成功数量：\" + res.successCnt,\n                type: 'success'\n              });\n              this.initTree(true);\n            }\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      },\n      downLoadFolderFromLdap : function(){\n        this.$confirm('是否确认从LDAP下载?', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.resourceTableLoading = true;\n          let param = {};\n          syncFolderFromLdap(param).then(res => {\n            this.resourceTableLoading = false;\n            if(res.errMsg){\n              this.$message({\n                message: res.errMsg,\n                type: 'error'\n              });\n            } else {\n              this.$message({\n                message: \"同步成功数量：\" + res.successCnt,\n                type: 'success'\n              });\n              this.initTree();\n            }\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      },\n      cleanUpLdap : function(){\n        this.$confirm('确认清空所有上传到LDAP和从LDAP下载的信息么？', '提示', {\n          confirmButtonText: '确定',\n          cancelButtonText: '取消',\n          type: 'warning'\n        }).then(() => {\n          this.resourceTableLoading = true;\n          let param = {};\n          cleanupFolderLdap(param).then(res => {\n            this.resourceTableLoading = false;\n            if(res.errMsg){\n              this.$message({\n                message: res.errMsg,\n                type: 'error'\n              });\n            } else {\n              this.$message({\n                message: \"操作成功\",\n                type: 'success'\n              });\n              this.initTree();\n              this.getBundles();\n            }\n          });\n        }).catch(() => {\n          this.$message({\n            type: 'info',\n            message: '已取消'\n          });\n        });\n      },\n\n      showAddFolderDialog : function(){\n        this.dialogAddForderFormVisible = true;\n        this.folderForm = {};\n        this.folderForm.toLdap = false;\n      },\n      addFolder : function(){\n        if(!this.folderForm.name.length){\n          this.$message({\n            message: \"请输入分组名称\",\n            type: 'error'\n          });\n          return;\n        }\n\n        let param = {\n          name : this.folderForm.name,\n          parentId : this.currentSelectNode.id,\n          toLdap : this.folderForm.toLdap\n        };\n\n        addFolder(param).then(res => {\n          if (res.errMsg) {\n            this.$message({\n              message: res.errMsg,\n              type: 'error'\n            });\n          } else {\n            //this.currentSelectNode.children.push(res.folder);\n            this.initTree(true)\n            this.dialogAddForderFormVisible = false;\n          }\n        });\n      },\n      showModifyFolderDialog : function(){\n        this.dialogmodifyForderFormVisible = true;\n        this.modifyForm = {\n          name : this.currentSelectNode.name,\n          toLdap : this.currentSelectNode.toLdap\n        };\n        // this.folderForm = {};\n        // this.folderForm.name = this.currentSelectNode.name;\n        // this.folderForm.toLdap = this.currentSelectNode.toLdap;\n      },\n      modifyFolder : function(){\n        if(!this.modifyForm.name.length){\n          this.$message({\n            message: \"请输入分组名称\",\n            type: 'error'\n          });\n          return;\n        }\n\n        // if(this.folderForm.name === this.currentSelectNode.name){\n        //   return;\n        // }\n\n        let param = {\n          id : this.currentSelectNode.id,\n          name : this.modifyForm.name,\n          toLdap : this.modifyForm.toLdap\n        };\n\n        modifyFolder(param).then(res => {\n          if (res.errMsg) {\n            this.$message({\n              message: res.errMsg,\n              type: 'error'\n            });\n          } else {\n            this.initTree(true);\n            this.dialogmodifyForderFormVisible = false;\n          }\n        });\n      },\n      deleteFolder : function(){\n        if(this.currentSelectNode.beFolder){\n          //删除分组folder\n          let param = {\n            id : this.currentSelectNode.id\n          };\n\n          deleteFolder(param).then(res => {\n            if (res.errMsg) {\n              this.$message({\n                message: res.errMsg,\n                type: 'error'\n              });\n            } else {\n                this.initTree(true);\n            }\n          });\n        } else {\n          //删除分组设备\n          if(this.currentSelectNode.bundleId){\n            let param = {\n              bundleIds : this.currentSelectNode.bundleId\n            };\n            resetFolderOfBundles(param).then(res => {\n              if (res.errMsg) {\n                this.$message({\n                  message: res.errMsg,\n                  type: 'error'\n                });\n              } else {\n                 this.initTree(true);\n                this.getBundles();\n              }\n            });\n          }else if(this.currentSelectNode.id){\n            let param = {\n              userIds : this.currentSelectNode.id\n            };\n            resetFolderOfUsers(param).then(res => {\n              if (res.errMsg) {\n                this.$message({\n                  message: res.errMsg,\n                  type: 'error'\n                });\n              } else {\n                this.initTree(true);\n                this.getUsers();\n              }\n            });\n          }\n\n        }\n      },\n\n      resetRoot : function() {\n\n        let param = {};\n\n        resetRootNode(param).then(res => {\n            if (res.errMsg) {\n              this.$message({\n                message: res.errMsg,\n                type: 'error'\n              });\n            } else {\n              this.initTree();\n            }\n          });\n\n\n      },\n\n\n      handleNodeExpand : function(data,node) {\n          this.expandNodeKeysArr.push(node.key);\n      },\n\n      handleNodeCollapse: function(data,node) {\n          for (var i = 0; i < this.expandNodeKeysArr.length; i++) {\n\n            if (this.expandNodeKeysArr[i] === node.key) {\n                this.expandNodeKeysArr.splice(i,1);\n            }\n          }\n      },\n\n\n      setFolder : function(){\n        if(this.resourceTableShow){\n          let bundleIdArr = this.multipleSelection.map(bundle => bundle.bundleId);\n          let param = {\n            folderId : this.currentSelectNode.id,\n            bundleIds : bundleIdArr.join(\",\")\n          };\n\n        setFolderOfBundles(param).then(res => {\n            if (res.errMsg) {\n              this.$message({\n                message: res.errMsg,\n                type: 'error'\n              });\n            } else {\n              this.currentSelectNode.children = this.currentSelectNode.children.concat(res.bundleNodes);\n              this.getBundles();\n            }\n          });\n        }else if(this.userTableShow){\n          let userArr = this.multipleSelection;\n          let param = {\n            folderId : this.currentSelectNode.id,\n            users : JSON.stringify(userArr)\n          };\n\n          setFolderToUsers(param).then(res => {\n            if (res.errMsg) {\n              this.$message({\n                message: res.errMsg,\n                type: 'error'\n              });\n            } else {\n              this.initTree(true);\n              this.getUsers();\n            }\n          });\n        }\n\n      },\n\n      handleSelectionChange : function(val){\n        this.multipleSelection = val;\n        if(this.multipleSelection.length && this.currentSelectNode && this.currentSelectNode.beFolder){\n          //开启设置folder按钮\n          this.disableSetFolderBtn = false;\n        }else{\n          this.disableSetFolderBtn = true;\n        }\n      },\n\n      handleNodeClick : function(d,n,s){\n        //点击分组树节点\n        this.currentSelectNode = d;\n        if(d.beFolder){\n          //开启添加folder按钮\n          this.disableAddFolderBtn = false;\n          //开启修改folder按钮\n          this.disableModifyFolderBtn = false;\n          if(this.multipleSelection.length){\n            //开启设置folder按钮\n            this.disableSetFolderBtn = false;\n          }\n          if((d.children && d.children.length) || d.parentId < 0){\n            //禁止删除folder按钮\n            this.disableDeleteFolderBtn = true;\n          }else{\n            //开启删除folder按钮\n            this.disableDeleteFolderBtn = false;\n          }\n        } else {\n          this.disableAddFolderBtn = true;\n          this.disableModifyFolderBtn = true;\n          this.disableSetFolderBtn = true;\n          this.disableDeleteFolderBtn = false;\n        }\n      },\n\n      handleNodeDragEnd : function(draggingNode, dropNode, dropType, ev){\n        if(dropType === 'none'){\n          return;\n        }\n\n        var nodeId;\n        var newTargetId;\n\n        if (draggingNode.data.nodeType === 'FOLDER') {\n          nodeId = draggingNode.data.id;\n        } else if (draggingNode.data.nodeType === 'BUNDLE') {\n          nodeId = draggingNode.data.bundleId;\n        } else if (draggingNode.data.nodeType === 'USER') {\n          nodeId = draggingNode.data.username;\n\n        }\n\n        if (dropNode.data.nodeType === 'FOLDER') {\n          newTargetId = dropNode.data.id;\n        } else if (dropNode.data.nodeType === 'BUNDLE') {\n          newTargetId = dropNode.data.bundleId;\n        } else if (dropNode.data.nodeType === 'USER') {\n          newTargetId = dropNode.data.username;\n        }\n\n        let param = {\n          nodeId : nodeId,\n          changeType : dropType,\n          nodeType: draggingNode.data.nodeType,\n          newTargetId: newTargetId,\n          newTargetType: dropNode.data.nodeType,\n          newTargetIndex: dropNode.data.folderIndex,\n          newTargetParentId: dropNode.data.parentId\n        };\n\n\n        changeNodePosition(param).then(res => {\n            if (res.errMsg) {\n              this.$message({\n                message: res.errMsg,\n                type: 'error'\n              });\n            }\n\n            console.log('change end, initTree')\n            this.initTree(true);\n\n          });\n      },\n\n      allowDrop(draggingNode, dropNode, type) {\n        if(draggingNode.id === dropNode.id){\n          return false;\n        }\n\n        if(type==='none'){\n          return false;\n        }\n\n        if((dropNode.data.systemSourceType)  && draggingNode.data.parentId === -1 && draggingNode.data.systemSourceType){\n          return false;\n        }\n\n        if(dropNode.data.folderType === 'ON_DEMAND'){\n          return false;\n        }\n\n        if(dropNode.data.nodeType!=='FOLDER'){\n\n          if(dropNode.data.parentId !== -1){\n            var parentNode = this.$refs.tree.getNode(dropNode.data.parentId);\n\n            if(parentNode.data.folderType === 'ON_DEMAND'){\n              return false;\n            }\n          }\n        }\n\n        if((type==='next' || type === 'prev') &&  dropNode.data.parentId === -1){\n          return false;\n        }\n\n        return true;\n      },\n\n      allowDrag(draggingNode) {\n\n\n        if(draggingNode.data.nodeType!=='FOLDER'){\n          return false;\n        }\n\n\n        if(draggingNode.data.parentId === -1 && !draggingNode.data.systemSourceType){\n          return false;\n        }\n\n        if(draggingNode.data.folderType === 'ON_DEMAND'){\n          return false;\n        }\n\n\n        if(!draggingNode.data.systemSourceType){\n          return false;\n        }\n        return true;\n      },\n\n      showSetRootDialog : function(){\n        this.dialogsetRootVisible = true;\n        this.getRootoptions();\n      },\n      getRootoptions : function(){\n        this.setRootOptions = [];\n        queryRootOptions({}).then(res => {\n          if (res.errMsg) {\n            this.$message({\n              message: res.errMsg,\n              type: 'error'\n            });\n          } else {\n            for(let rootOption of res.rootOptions){\n              let option = {\n                \"value\" : rootOption.id,\n                \"label\" : rootOption.name\n              };\n              this.setRootOptions.push(option);\n            }\n          }\n        });\n      },\n      setRoot : function(){\n        let param = {\n          rootId : this.setRootId\n        };\n        setRoot(param).then(res => {\n          if (res.errMsg) {\n            this.$message({\n              message: res.errMsg,\n              type: 'error'\n            });\n          } else {\n            this.dialogsetRootVisible = false;\n            this.initTree();\n          }\n        });\n\n      }\n\t\t},\n\t\tmounted() {\n\t\t  this.initTree();\n\t\t  // this.getDeviceModels();\n\t\t  this.getBundles();\n\t\t}\n\t}\n\n</script>\n\n<style>\n  .clearfix:before,\n  .clearfix:after {\n    display: table;\n    content: \"\";\n  }\n  .clearfix:after {\n    clear: both\n  }\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/views/folder/FolderManage.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',[_c('el-tabs',{staticStyle:{\"float\":\"left\",\"width\":\"100%\"},model:{value:(_vm.activeTabName),callback:function ($$v) {_vm.activeTabName=$$v},expression:\"activeTabName\"}},[_c('el-tab-pane',{attrs:{\"label\":\"分组管理\",\"name\":\"分组管理\"}})],1),_vm._v(\" \"),_c('el-card',{staticStyle:{\"float\":\"left\",\"margin-top\":\"10px\",\"width\":\"45%\",\"font-size\":\"18px\",\"min-height\":\"800px\"},attrs:{\"body-style\":\"padding:0px\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('el-button',{staticStyle:{\"float\":\"left\"},attrs:{\"type\":\"primary\",\"size\":\"small\",\"disabled\":_vm.disableAddFolderBtn},on:{\"click\":_vm.showAddFolderDialog}},[_vm._v(\"添加目录\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"left\"},attrs:{\"type\":\"primary\",\"size\":\"small\",\"disabled\":_vm.disableModifyFolderBtn},on:{\"click\":_vm.showModifyFolderDialog}},[_vm._v(\"修改\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"left\"},attrs:{\"type\":\"danger\",\"size\":\"small\",\"disabled\":_vm.disableDeleteFolderBtn},on:{\"click\":_vm.deleteFolder}},[_vm._v(\"删除\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"left\"},attrs:{\"type\":\"danger\",\"size\":\"small\",\"disabled\":_vm.disableResetRootBtn},on:{\"click\":_vm.resetRoot}},[_vm._v(\"重置根目录\")]),_vm._v(\" \"),_c('el-dropdown',{staticStyle:{\"float\":\"left\",\"margin-left\":\"10px\"}},[_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"small\"}},[_vm._v(\"\\n              LDAP操作\"),_c('i',{staticClass:\"el-icon-arrow-down el-icon--right\"})]),_vm._v(\" \"),_c('el-dropdown-menu',{attrs:{\"slot\":\"dropdown\"},slot:\"dropdown\"},[_c('el-dropdown-item',{nativeOn:{\"click\":function($event){_vm.syncFolderToLdap()}}},[_vm._v(\"上传到LDAP\")]),_vm._v(\" \"),_c('el-dropdown-item',{nativeOn:{\"click\":function($event){_vm.downLoadFolderFromLdap()}}},[_vm._v(\"从LDAP下载\")]),_vm._v(\" \"),_c('el-dropdown-item',{nativeOn:{\"click\":function($event){_vm.cleanUpLdap()}}},[_vm._v(\"重置LDAP数据\")])],1)],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"custom-tree-container\"},[_c('div',[_c('el-tree',{ref:\"tree\",attrs:{\"data\":_vm.tree,\"node-key\":\"id\",\"highlight-current\":\"\",\"expand-on-click-node\":false,\"props\":_vm.defaultProps,\"default-expanded-keys\":_vm.defaultExpandKeys,\"draggable\":\"\",\"allow-drop\":_vm.allowDrop,\"allow-drag\":_vm.allowDrag},on:{\"node-click\":_vm.handleNodeClick,\"node-drag-end\":_vm.handleNodeDragEnd,\"node-expand\":_vm.handleNodeExpand,\"node-collapse\":_vm.handleNodeCollapse}})],1)])]),_vm._v(\" \"),_c('el-card',{staticStyle:{\"float\":\"left\",\"margin-left\":\"50px\",\"margin-top\":\"10px\",\"width\":\"50%\",\"min-height\":\"800px\"},attrs:{\"body-style\":\"padding:0px\"}},[_c('div',{staticClass:\"clearfix\",attrs:{\"slot\":\"header\"},slot:\"header\"},[_c('el-input',{staticStyle:{\"float\":\"left\",\"margin-left\":\"30px\",\"width\":\"200px\"},attrs:{\"size\":\"small\",\"placeholder\":\"关键字\"},model:{value:(_vm.filters.keyword),callback:function ($$v) {_vm.$set(_vm.filters, \"keyword\", $$v)},expression:\"filters.keyword\"}}),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"left\",\"margin-left\":\"30px\"},attrs:{\"type\":\"info\",\"size\":\"small\"},on:{\"click\":_vm.getBundles}},[_vm._v(\"查询设备\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"left\",\"margin-left\":\"30px\"},attrs:{\"type\":\"info\",\"size\":\"small\"},on:{\"click\":_vm.getUsers}},[_vm._v(\"查询用户\")]),_vm._v(\" \"),_c('el-button',{staticStyle:{\"float\":\"right\",\"margin-right\":\"50px\"},attrs:{\"type\":\"primary\",\"size\":\"small\",\"disabled\":_vm.disableSetFolderBtn},on:{\"click\":_vm.setFolder}},[_vm._v(\"加入分组\")])],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.resourceTableShow),expression:\"resourceTableShow\"},{name:\"loading\",rawName:\"v-loading\",value:(_vm.resourceTableLoading),expression:\"resourceTableLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.resources},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"width\":\"50\",\"type\":\"selection\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"bundleName\",\"label\":\"名称\",\"width\":\"200\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"username\",\"label\":\"账号\",\"width\":\"200\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"bundleId\",\"label\":\"资源ID\",\"width\":\"300\",\"sortable\":\"\"}})],1),_vm._v(\" \"),_c('el-table',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.userTableShow),expression:\"userTableShow\"},{name:\"loading\",rawName:\"v-loading\",value:(_vm.userTableLoading),expression:\"userTableLoading\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.users},on:{\"selection-change\":_vm.handleSelectionChange}},[_c('el-table-column',{attrs:{\"width\":\"50\",\"type\":\"selection\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"名称\",\"width\":\"200\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"userNo\",\"label\":\"用户编号\",\"width\":\"200\",\"sortable\":\"\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"creater\",\"label\":\"创建者\",\"width\":\"250\",\"sortable\":\"\"}})],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"添加分组\",\"visible\":_vm.dialogAddForderFormVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.dialogAddForderFormVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.folderForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分组名称\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.folderForm.name),callback:function ($$v) {_vm.$set(_vm.folderForm, \"name\", $$v)},expression:\"folderForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"上传LDAP\"}},[_c('el-select',{attrs:{\"placeholder\":\"是否上传LDAP\"},model:{value:(_vm.folderForm.toLdap),callback:function ($$v) {_vm.$set(_vm.folderForm, \"toLdap\", $$v)},expression:\"folderForm.toLdap\"}},_vm._l((_vm.toLdapoptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}))],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogAddForderFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.addFolder}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"修改分组\",\"visible\":_vm.dialogmodifyForderFormVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.dialogmodifyForderFormVisible=$event}}},[_c('el-form',{attrs:{\"model\":_vm.modifyForm,\"label-width\":\"100px\"}},[_c('el-form-item',{attrs:{\"label\":\"分组名称\"}},[_c('el-input',{staticStyle:{\"width\":\"300px\"},attrs:{\"auto-complete\":\"off\"},model:{value:(_vm.modifyForm.name),callback:function ($$v) {_vm.$set(_vm.modifyForm, \"name\", $$v)},expression:\"modifyForm.name\"}})],1),_vm._v(\" \"),_c('el-form-item',{attrs:{\"label\":\"上传LDAP\"}},[_c('el-select',{attrs:{\"placeholder\":\"是否上传LDAP\"},model:{value:(_vm.modifyForm.toLdap),callback:function ($$v) {_vm.$set(_vm.modifyForm, \"toLdap\", $$v)},expression:\"modifyForm.toLdap\"}},_vm._l((_vm.toLdapoptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}))],1)],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogmodifyForderFormVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.modifyFolder}},[_vm._v(\"确 定\")])],1)],1),_vm._v(\" \"),_c('el-dialog',{attrs:{\"title\":\"设置根目录\",\"visible\":_vm.dialogsetRootVisible,\"width\":\"30%\"},on:{\"update:visible\":function($event){_vm.dialogsetRootVisible=$event}}},[_c('div',{staticStyle:{\"margin-top\":\"10px\"}},[_c('el-select',{staticStyle:{\"float\":\"left\",\"margin-left\":\"30px\",\"width\":\"200px\"},attrs:{\"placeholder\":\"选择根目录\"},model:{value:(_vm.setRootId),callback:function ($$v) {_vm.setRootId=$$v},expression:\"setRootId\"}},_vm._l((_vm.setRootOptions),function(item){return _c('el-option',{key:item.value,attrs:{\"label\":item.label,\"value\":item.value}})}))],1),_vm._v(\" \"),_c('div',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{on:{\"click\":function($event){_vm.dialogsetRootVisible = false}}},[_vm._v(\"取 消\")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\"},on:{\"click\":_vm.setRoot}},[_vm._v(\"确 定\")])],1)])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-066d007e\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/folder/FolderManage.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-066d007e\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./FolderManage.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FolderManage.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./FolderManage.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-066d007e\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./FolderManage.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/folder/FolderManage.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}